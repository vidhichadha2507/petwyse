{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { HTMLElementType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Popover from '../Popover';\nimport MenuList from '../MenuList';\nimport * as ReactDOM from 'react-dom';\nimport setRef from '../utils/setRef';\nimport useTheme from '../styles/useTheme';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nvar RTL_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'right'\n};\nvar LTR_ORIGIN = {\n  vertical: 'top',\n  horizontal: 'left'\n};\nexport var styles = {\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\n    // the menu.\n    maxHeight: 'calc(100% - 96px)',\n    // Add iOS momentum scrolling.\n    WebkitOverflowScrolling: 'touch'\n  },\n\n  /* Styles applied to the `List` component via `MenuList`. */\n  list: {\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  }\n};\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(props, ref) {\n  var _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      _props$disableAutoFoc = props.disableAutoFocusItem,\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$MenuListProps = props.MenuListProps,\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\n      onClose = props.onClose,\n      onEnteringProp = props.onEntering,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      PopoverClasses = props.PopoverClasses,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\n      _props$TransitionProp = props.TransitionProps;\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\n\n  var onEntering = _props$TransitionProp.onEntering,\n      TransitionProps = _objectWithoutProperties(_props$TransitionProp, [\"onEntering\"]),\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"]);\n\n  var theme = useTheme();\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\n  var menuListActionsRef = React.useRef(null);\n  var contentAnchorRef = React.useRef(null);\n\n  var getContentAnchorEl = function getContentAnchorEl() {\n    return contentAnchorRef.current;\n  };\n\n  var handleEntering = function handleEntering(element, isAppearing) {\n    if (menuListActionsRef.current) {\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\n    }\n\n    if (onEnteringProp) {\n      onEnteringProp(element, isAppearing);\n    }\n\n    if (onEntering) {\n      onEntering(element, isAppearing);\n    }\n  };\n\n  var handleListKeyDown = function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      if (onClose) {\n        onClose(event, 'tabKeyDown');\n      }\n    }\n  };\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\n\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.map(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant !== \"menu\" && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var items = React.Children.map(children, function (child, index) {\n    if (index === activeItemIndex) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        ref: function ref(instance) {\n          // #StrictMode ready\n          contentAnchorRef.current = ReactDOM.findDOMNode(instance);\n          setRef(child.ref, instance);\n        }\n      });\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(Popover, _extends({\n    getContentAnchorEl: getContentAnchorEl,\n    classes: PopoverClasses,\n    onClose: onClose,\n    TransitionProps: _extends({\n      onEntering: handleEntering\n    }, TransitionProps),\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\n    PaperProps: _extends({}, PaperProps, {\n      classes: _extends({}, PaperProps.classes, {\n        root: classes.paper\n      })\n    }),\n    open: open,\n    ref: ref,\n    transitionDuration: transitionDuration\n  }, other), /*#__PURE__*/React.createElement(MenuList, _extends({\n    onKeyDown: handleListKeyDown,\n    actions: menuListActionsRef,\n    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\n    autoFocusItem: autoFocusItem,\n    variant: variant\n  }, MenuListProps, {\n    className: clsx(classes.list, MenuListProps.className)\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * A HTML element, or a function that returns it.\r\n   * It's used to set the position of the menu.\r\n   */\n  anchorEl: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   */\n  disableAutoFocusItem: PropTypes.bool,\n\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\n  MenuListProps: PropTypes.object,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired before the Menu enters.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\r\n   * Callback fired before the Menu exits.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\n\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  PaperProps: PropTypes.object,\n\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\n  PopoverClasses: PropTypes.object,\n\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\n  TransitionProps: PropTypes.object,\n\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenu'\n})(Menu);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","isFragment","PropTypes","clsx","HTMLElementType","withStyles","Popover","MenuList","ReactDOM","setRef","useTheme","deprecatedPropType","RTL_ORIGIN","vertical","horizontal","LTR_ORIGIN","styles","paper","maxHeight","WebkitOverflowScrolling","list","outline","Menu","forwardRef","props","ref","_props$autoFocus","autoFocus","children","classes","_props$disableAutoFoc","disableAutoFocusItem","_props$MenuListProps","MenuListProps","onClose","onEnteringProp","onEntering","open","_props$PaperProps","PaperProps","PopoverClasses","_props$transitionDura","transitionDuration","_props$TransitionProp","TransitionProps","_props$variant","variant","other","theme","autoFocusItem","menuListActionsRef","useRef","contentAnchorRef","getContentAnchorEl","current","handleEntering","element","isAppearing","adjustStyleForScrollbar","handleListKeyDown","event","key","preventDefault","activeItemIndex","Children","map","child","index","isValidElement","process","env","NODE_ENV","console","error","join","disabled","selected","items","cloneElement","instance","findDOMNode","createElement","anchorOrigin","direction","transformOrigin","root","onKeyDown","actions","className","propTypes","anchorEl","oneOfType","func","bool","node","object","onEnter","onEntered","onExit","onExited","onExiting","isRequired","oneOf","number","shape","appear","enter","exit","name"],"sources":["C:/Users/prashant/OneDrive - Amity University/manav rachna/petwyse/node_modules/@material-ui/core/esm/Menu/Menu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { HTMLElementType } from '@material-ui/utils';\r\nimport withStyles from '../styles/withStyles';\r\nimport Popover from '../Popover';\r\nimport MenuList from '../MenuList';\r\nimport * as ReactDOM from 'react-dom';\r\nimport setRef from '../utils/setRef';\r\nimport useTheme from '../styles/useTheme';\r\nimport deprecatedPropType from '../utils/deprecatedPropType';\r\nvar RTL_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'right'\r\n};\r\nvar LTR_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'left'\r\n};\r\nexport var styles = {\r\n  /* Styles applied to the `Paper` component. */\r\n  paper: {\r\n    // specZ: The maximum height of a simple menu should be one or more rows less than the view\r\n    // height. This ensures a tapable area outside of the simple menu with which to dismiss\r\n    // the menu.\r\n    maxHeight: 'calc(100% - 96px)',\r\n    // Add iOS momentum scrolling.\r\n    WebkitOverflowScrolling: 'touch'\r\n  },\r\n\r\n  /* Styles applied to the `List` component via `MenuList`. */\r\n  list: {\r\n    // We disable the focus ring for mouse, touch and keyboard users.\r\n    outline: 0\r\n  }\r\n};\r\nvar Menu = /*#__PURE__*/React.forwardRef(function Menu(props, ref) {\r\n  var _props$autoFocus = props.autoFocus,\r\n      autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\r\n      children = props.children,\r\n      classes = props.classes,\r\n      _props$disableAutoFoc = props.disableAutoFocusItem,\r\n      disableAutoFocusItem = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\r\n      _props$MenuListProps = props.MenuListProps,\r\n      MenuListProps = _props$MenuListProps === void 0 ? {} : _props$MenuListProps,\r\n      onClose = props.onClose,\r\n      onEnteringProp = props.onEntering,\r\n      open = props.open,\r\n      _props$PaperProps = props.PaperProps,\r\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\r\n      PopoverClasses = props.PopoverClasses,\r\n      _props$transitionDura = props.transitionDuration,\r\n      transitionDuration = _props$transitionDura === void 0 ? 'auto' : _props$transitionDura,\r\n      _props$TransitionProp = props.TransitionProps;\r\n  _props$TransitionProp = _props$TransitionProp === void 0 ? {} : _props$TransitionProp;\r\n\r\n  var onEntering = _props$TransitionProp.onEntering,\r\n      TransitionProps = _objectWithoutProperties(_props$TransitionProp, [\"onEntering\"]),\r\n      _props$variant = props.variant,\r\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\r\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"children\", \"classes\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"onEntering\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\"]);\r\n\r\n  var theme = useTheme();\r\n  var autoFocusItem = autoFocus && !disableAutoFocusItem && open;\r\n  var menuListActionsRef = React.useRef(null);\r\n  var contentAnchorRef = React.useRef(null);\r\n\r\n  var getContentAnchorEl = function getContentAnchorEl() {\r\n    return contentAnchorRef.current;\r\n  };\r\n\r\n  var handleEntering = function handleEntering(element, isAppearing) {\r\n    if (menuListActionsRef.current) {\r\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\r\n    }\r\n\r\n    if (onEnteringProp) {\r\n      onEnteringProp(element, isAppearing);\r\n    }\r\n\r\n    if (onEntering) {\r\n      onEntering(element, isAppearing);\r\n    }\r\n  };\r\n\r\n  var handleListKeyDown = function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n\r\n      if (onClose) {\r\n        onClose(event, 'tabKeyDown');\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\r\n\r\n\r\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\r\n  // to check if there is a `selected` item. We're looking for the last `selected`\r\n  // item and use the first valid item as a fallback\r\n\r\n  React.Children.map(children, function (child, index) {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    if (!child.props.disabled) {\r\n      if (variant !== \"menu\" && child.props.selected) {\r\n        activeItemIndex = index;\r\n      } else if (activeItemIndex === -1) {\r\n        activeItemIndex = index;\r\n      }\r\n    }\r\n  });\r\n  var items = React.Children.map(children, function (child, index) {\r\n    if (index === activeItemIndex) {\r\n      return /*#__PURE__*/React.cloneElement(child, {\r\n        ref: function ref(instance) {\r\n          // #StrictMode ready\r\n          contentAnchorRef.current = ReactDOM.findDOMNode(instance);\r\n          setRef(child.ref, instance);\r\n        }\r\n      });\r\n    }\r\n\r\n    return child;\r\n  });\r\n  return /*#__PURE__*/React.createElement(Popover, _extends({\r\n    getContentAnchorEl: getContentAnchorEl,\r\n    classes: PopoverClasses,\r\n    onClose: onClose,\r\n    TransitionProps: _extends({\r\n      onEntering: handleEntering\r\n    }, TransitionProps),\r\n    anchorOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    transformOrigin: theme.direction === 'rtl' ? RTL_ORIGIN : LTR_ORIGIN,\r\n    PaperProps: _extends({}, PaperProps, {\r\n      classes: _extends({}, PaperProps.classes, {\r\n        root: classes.paper\r\n      })\r\n    }),\r\n    open: open,\r\n    ref: ref,\r\n    transitionDuration: transitionDuration\r\n  }, other), /*#__PURE__*/React.createElement(MenuList, _extends({\r\n    onKeyDown: handleListKeyDown,\r\n    actions: menuListActionsRef,\r\n    autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\r\n    autoFocusItem: autoFocusItem,\r\n    variant: variant\r\n  }, MenuListProps, {\r\n    className: clsx(classes.list, MenuListProps.className)\r\n  }), items));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * A HTML element, or a function that returns it.\r\n   * It's used to set the position of the menu.\r\n   */\r\n  anchorEl: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([HTMLElementType, PropTypes.func]),\r\n\r\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   */\r\n  disableAutoFocusItem: PropTypes.bool,\r\n\r\n  /**\r\n   * Props applied to the [`MenuList`](/api/menu-list/) element.\r\n   */\r\n  MenuListProps: PropTypes.object,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the Menu enters.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onEnter: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu has entered.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onEntered: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu is entering.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onEntering: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired before the Menu exits.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onExit: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu has exited.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onExited: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * Callback fired when the Menu is exiting.\r\n   * @deprecated Use the `TransitionProps` prop instead.\r\n   */\r\n  onExiting: deprecatedPropType(PropTypes.func, 'Use the `TransitionProps` prop instead.'),\r\n\r\n  /**\r\n   * If `true`, the menu is visible.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  PaperProps: PropTypes.object,\r\n\r\n  /**\r\n   * `classes` prop applied to the [`Popover`](/api/popover/) element.\r\n   */\r\n  PopoverClasses: PropTypes.object,\r\n\r\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\r\n  TransitionProps: PropTypes.object,\r\n\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiMenu'\r\n})(Menu);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
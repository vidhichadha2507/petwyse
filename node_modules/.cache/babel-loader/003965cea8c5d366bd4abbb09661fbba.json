{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      transformOrigin: 'top left'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Pseudo-class applied to the asterisk element. */\n    asterisk: {},\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 24px) scale(1)'\n    },\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      // Compensation for the `Input.inputDense` style.\n      transform: 'translate(0, 21px) scale(1)'\n    },\n\n    /* Styles applied to the `input` element if `shrink={true}`. */\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(0.75)',\n      transformOrigin: 'top left'\n    },\n\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\n    animated: {\n      transition: theme.transitions.create(['color', 'transform'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(12px, 17px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(12px, 10px) scale(0.75)',\n        '&$marginDense': {\n          transform: 'translate(12px, 7px) scale(0.75)'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(14px, 12px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    }\n  };\n};\nvar InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableAnimati = props.disableAnimation,\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n      margin = props.margin,\n      shrinkProp = props.shrink,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return /*#__PURE__*/React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\n      'filled': classes.filled,\n      'outlined': classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The contents of the `InputLabel`.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\r\n   * If `true`, the transition animation is disabled.\r\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\r\n   * If `true`, apply disabled class.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label will be displayed in an error state.\r\n   */\n  error: PropTypes.bool,\n\n  /**\r\n   * If `true`, the input of this label is focused.\r\n   */\n  focused: PropTypes.bool,\n\n  /**\r\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\r\n   * FormControl.\r\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\r\n   * if `true`, the label will indicate that the input is required.\r\n   */\n  required: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label is shrunk.\r\n   */\n  shrink: PropTypes.bool,\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","map":{"version":3,"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","formControlState","useFormControl","withStyles","FormLabel","styles","theme","root","display","transformOrigin","focused","disabled","error","required","asterisk","formControl","position","left","top","transform","marginDense","shrink","animated","transition","transitions","create","duration","shorter","easing","easeOut","filled","zIndex","pointerEvents","outlined","InputLabel","forwardRef","props","ref","classes","className","_props$disableAnimati","disableAnimation","margin","shrinkProp","variant","other","muiFormControl","adornedStart","fcs","states","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","color","oneOf","bool","name"],"sources":["C:/Users/aayus/OneDrive/Desktop/New folder/petwyse/node_modules/@material-ui/core/esm/InputLabel/InputLabel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport formControlState from '../FormControl/formControlState';\r\nimport useFormControl from '../FormControl/useFormControl';\r\nimport withStyles from '../styles/withStyles';\r\nimport FormLabel from '../FormLabel';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      display: 'block',\r\n      transformOrigin: 'top left'\r\n    },\r\n\r\n    /* Pseudo-class applied to the root element if `focused={true}`. */\r\n    focused: {},\r\n\r\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\r\n    disabled: {},\r\n\r\n    /* Pseudo-class applied to the root element if `error={true}`. */\r\n    error: {},\r\n\r\n    /* Pseudo-class applied to the root element if `required={true}`. */\r\n    required: {},\r\n\r\n    /* Pseudo-class applied to the asterisk element. */\r\n    asterisk: {},\r\n\r\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\r\n    formControl: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      // slight alteration to spec spacing to match visual spec result\r\n      transform: 'translate(0, 24px) scale(1)'\r\n    },\r\n\r\n    /* Styles applied to the root element if `margin=\"dense\"`. */\r\n    marginDense: {\r\n      // Compensation for the `Input.inputDense` style.\r\n      transform: 'translate(0, 21px) scale(1)'\r\n    },\r\n\r\n    /* Styles applied to the `input` element if `shrink={true}`. */\r\n    shrink: {\r\n      transform: 'translate(0, 1.5px) scale(0.75)',\r\n      transformOrigin: 'top left'\r\n    },\r\n\r\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\r\n    animated: {\r\n      transition: theme.transitions.create(['color', 'transform'], {\r\n        duration: theme.transitions.duration.shorter,\r\n        easing: theme.transitions.easing.easeOut\r\n      })\r\n    },\r\n\r\n    /* Styles applied to the root element if `variant=\"filled\"`. */\r\n    filled: {\r\n      // Chrome's autofill feature gives the input field a yellow background.\r\n      // Since the input field is behind the label in the HTML tree,\r\n      // the input field is drawn last and hides the label with an opaque background color.\r\n      // zIndex: 1 will raise the label above opaque background-colors of input.\r\n      zIndex: 1,\r\n      pointerEvents: 'none',\r\n      transform: 'translate(12px, 20px) scale(1)',\r\n      '&$marginDense': {\r\n        transform: 'translate(12px, 17px) scale(1)'\r\n      },\r\n      '&$shrink': {\r\n        transform: 'translate(12px, 10px) scale(0.75)',\r\n        '&$marginDense': {\r\n          transform: 'translate(12px, 7px) scale(0.75)'\r\n        }\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\r\n    outlined: {\r\n      // see comment above on filled.zIndex\r\n      zIndex: 1,\r\n      pointerEvents: 'none',\r\n      transform: 'translate(14px, 20px) scale(1)',\r\n      '&$marginDense': {\r\n        transform: 'translate(14px, 12px) scale(1)'\r\n      },\r\n      '&$shrink': {\r\n        transform: 'translate(14px, -6px) scale(0.75)'\r\n      }\r\n    }\r\n  };\r\n};\r\nvar InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(props, ref) {\r\n  var classes = props.classes,\r\n      className = props.className,\r\n      _props$disableAnimati = props.disableAnimation,\r\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\r\n      margin = props.margin,\r\n      shrinkProp = props.shrink,\r\n      variant = props.variant,\r\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\r\n\r\n  var muiFormControl = useFormControl();\r\n  var shrink = shrinkProp;\r\n\r\n  if (typeof shrink === 'undefined' && muiFormControl) {\r\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\r\n  }\r\n\r\n  var fcs = formControlState({\r\n    props: props,\r\n    muiFormControl: muiFormControl,\r\n    states: ['margin', 'variant']\r\n  });\r\n  return /*#__PURE__*/React.createElement(FormLabel, _extends({\r\n    \"data-shrink\": shrink,\r\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\r\n      'filled': classes.filled,\r\n      'outlined': classes.outlined\r\n    }[fcs.variant]),\r\n    classes: {\r\n      focused: classes.focused,\r\n      disabled: classes.disabled,\r\n      error: classes.error,\r\n      required: classes.required,\r\n      asterisk: classes.asterisk\r\n    },\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The contents of the `InputLabel`.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\r\n  color: PropTypes.oneOf(['primary', 'secondary']),\r\n\r\n  /**\r\n   * If `true`, the transition animation is disabled.\r\n   */\r\n  disableAnimation: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, apply disabled class.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label will be displayed in an error state.\r\n   */\r\n  error: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the input of this label is focused.\r\n   */\r\n  focused: PropTypes.bool,\r\n\r\n  /**\r\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\r\n   * FormControl.\r\n   */\r\n  margin: PropTypes.oneOf(['dense']),\r\n\r\n  /**\r\n   * if `true`, the label will indicate that the input is required.\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label is shrunk.\r\n   */\r\n  shrink: PropTypes.bool,\r\n\r\n  /**\r\n   * The variant to use.\r\n   */\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiInputLabel'\r\n})(InputLabel);"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/chandan/Downloads/Projects/petwyse-midnightHackers/src/components/maps.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"90%\",\n  height: \"500px\",\n  marginTop: \"50px\"\n};\n\nfunction Maps() {\n  _s();\n\n  const [lati, setLati] = useState(51.5072);\n  const [longi, setLongi] = useState(-0.1276);\n  const watchID = navigator.geolocation.getCurrentPosition(position => {\n    setLati(position.coords.latitude);\n    setLongi(position.coords.longitude);\n  });\n  const center = {\n    lat: lati,\n    lng: longi\n  };\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyApjdYiuTXmzZdNhzLWOc0fMGplLSjn2Qc\"\n  });\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 14,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: lati,\n        lng: longi\n      }\n    }, \"marker_1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Maps, \"xhaA+36VBlTwF+/LGFIbCwLIsxQ=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Maps;\nexport default _c2 = /*#__PURE__*/React.memo(Maps);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Maps\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["useState","GoogleMap","useJsApiLoader","Marker","React","containerStyle","width","height","marginTop","Maps","lati","setLati","longi","setLongi","watchID","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","center","lat","lng","isLoaded","id","googleMapsApiKey","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo"],"sources":["/Users/chandan/Downloads/Projects/petwyse-midnightHackers/src/components/maps.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { GoogleMap, useJsApiLoader, Marker } from \"@react-google-maps/api\";\nimport React from \"react\";\nconst containerStyle = {\n  width: \"90%\",\n  height: \"500px\",\n  marginTop: \"50px\",\n};\nfunction Maps() {\n  const [lati, setLati] = useState(51.5072);\n  const [longi, setLongi] = useState(-0.1276);\n  const watchID = navigator.geolocation.getCurrentPosition((position) => {\n    setLati(position.coords.latitude);\n    setLongi(position.coords.longitude);\n  });\n  const center = { lat: lati, lng: longi };\n  const { isLoaded } = useJsApiLoader({\n    id: \"google-map-script\",\n    googleMapsApiKey: \"AIzaSyApjdYiuTXmzZdNhzLWOc0fMGplLSjn2Qc\",\n  });\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={center}\n      zoom={14}\n      onLoad={onLoad}\n      onUnmount={onUnmount}\n    >\n      {/* Child components, such as markers, info windows, etc. */}\n      <Marker\n        key=\"marker_1\"\n        position={{\n          lat: lati,\n\n          lng: longi,\n        }}\n      />\n    </GoogleMap>\n  ) : (\n    <></>\n  );\n}\n\nexport default React.memo(Maps);\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,MAApC,QAAkD,wBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,KADc;EAErBC,MAAM,EAAE,OAFa;EAGrBC,SAAS,EAAE;AAHU,CAAvB;;AAKA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,OAAD,CAAhC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAC,MAAF,CAAlC;EACA,MAAMc,OAAO,GAAGC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;IACrEP,OAAO,CAACO,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAP;IACAP,QAAQ,CAACK,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAR;EACD,CAHe,CAAhB;EAIA,MAAMC,MAAM,GAAG;IAAEC,GAAG,EAAEb,IAAP;IAAac,GAAG,EAAEZ;EAAlB,CAAf;EACA,MAAM;IAAEa;EAAF,IAAevB,cAAc,CAAC;IAClCwB,EAAE,EAAE,mBAD8B;IAElCC,gBAAgB,EAAE;EAFgB,CAAD,CAAnC;EAIA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBzB,KAAK,CAACJ,QAAN,CAAe,IAAf,CAAtB;EAEA,MAAM8B,MAAM,GAAG1B,KAAK,CAAC2B,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;IACtD,MAAMK,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,CAAoCf,MAApC,CAAf;IACAM,GAAG,CAACU,SAAJ,CAAcL,MAAd;IACAJ,MAAM,CAACD,GAAD,CAAN;EACD,CAJc,EAIZ,EAJY,CAAf;EAKA,MAAMW,SAAS,GAAGnC,KAAK,CAAC2B,WAAN,CAAkB,SAASC,QAAT,CAAkBJ,GAAlB,EAAuB;IACzDC,MAAM,CAAC,IAAD,CAAN;EACD,CAFiB,EAEf,EAFe,CAAlB;EAGA,OAAOJ,QAAQ,gBACb,QAAC,SAAD;IACE,iBAAiB,EAAEpB,cADrB;IAEE,MAAM,EAAEiB,MAFV;IAGE,IAAI,EAAE,EAHR;IAIE,MAAM,EAAEQ,MAJV;IAKE,SAAS,EAAES,SALb;IAAA,uBAQE,QAAC,MAAD;MAEE,QAAQ,EAAE;QACRhB,GAAG,EAAEb,IADG;QAGRc,GAAG,EAAEZ;MAHG;IAFZ,GACM,UADN;MAAA;MAAA;MAAA;IAAA;EARF;IAAA;IAAA;IAAA;EAAA,QADa,gBAmBb,qCAnBF;AAqBD;;GA3CQH,I;UAQcP,c;;;KARdO,I;AA6CT,kCAAeL,KAAK,CAACoC,IAAN,CAAW/B,IAAX,CAAf"},"metadata":{},"sourceType":"module"}